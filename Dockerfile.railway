# Railway-specific Dockerfile for frontend deployment
# This builds from the root context but focuses on the frontend

# Multi-stage build for production
FROM node:18-alpine AS builder

# Install build dependencies
RUN apk add --no-cache git

# Set working directory
WORKDIR /app

# Copy frontend package files
COPY frontend/package*.json ./

# Clear npm cache and install dependencies
RUN npm cache clean --force && \
    npm install --frozen-lockfile --production=false

# Copy frontend source code
COPY frontend/ .

# Set NODE_ENV for build
ENV NODE_ENV=production

# Set default environment variables for build (Railway will override these)
ENV VITE_CLERK_PUBLISHABLE_KEY=pk_test_placeholder
ENV VITE_CONVEX_URL=https://placeholder.convex.cloud
ENV VITE_API_URL=http://localhost:3001
ENV VITE_APP_NAME="Audio Guestbook Platform"
ENV VITE_APP_DESCRIPTION="Collect multimedia messages from your event guests"
ENV VITE_DEV_MODE=false

# Build the application
RUN npm run build

# Production stage
FROM nginx:alpine AS production

# Copy built assets from builder stage
COPY --from=builder /app/dist /usr/share/nginx/html

# Copy nginx configuration
COPY frontend/nginx.conf /etc/nginx/conf.d/default.conf

# Expose port
EXPOSE 80

# Start nginx
CMD ["nginx", "-g", "daemon off;"]